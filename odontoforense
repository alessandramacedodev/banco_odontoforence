CREATE DATABASE odontoforense;
USE odontoforense;

-- Usuários
CREATE TABLE Usuarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL,
    role ENUM('Admin', 'Perito', 'Assistente') NOT NULL,
    ativo BOOLEAN DEFAULT TRUE,
    criado_em DATETIME DEFAULT CURRENT_TIMESTAMP,
    INDEX (email)
);

-- Casos periciais
CREATE TABLE Caso (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(255) NOT NULL,
    descricao TEXT NOT NULL,
    status ENUM('aberto', 'em_andamento', 'concluido') DEFAULT 'aberto',
    dataAbertura DATE NOT NULL,
    dataFechamento DATE,
    perito_responsavel_id INT,
    FOREIGN KEY (perito_responsavel_id) REFERENCES Usuarios(id)
);

-- Relacionamento caso ↔ peritos auxiliares
CREATE TABLE Caso_Perito (
    caso_id INT,
    perito_id INT,
    PRIMARY KEY (caso_id, perito_id),
    FOREIGN KEY (caso_id) REFERENCES Caso(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (perito_id) REFERENCES Usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Evidências
CREATE TABLE Evidencias (
    id INT AUTO_INCREMENT PRIMARY KEY,
    caso_id INT NOT NULL,
    tipo VARCHAR(100),
    descricao TEXT,
    arquivo_url VARCHAR(255),
    data_coleta DATE,
    FOREIGN KEY (caso_id) REFERENCES Caso(id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Laudos
CREATE TABLE Laudos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    caso_id INT NOT NULL,
    emitido_por_id INT NOT NULL,
    titulo VARCHAR(200) NOT NULL,
    conteudo TEXT NOT NULL,
    data_emissao DATE NOT NULL,
    arquivo_pdf_url VARCHAR(255),
    status ENUM('rascunho', 'em_revisao', 'finalizado') DEFAULT 'rascunho',
    chave_verificacao VARCHAR(255) UNIQUE,
    FOREIGN KEY (caso_id) REFERENCES Caso(id),
    FOREIGN KEY (emitido_por_id) REFERENCES Usuarios(id)
);

-- Anexos dos laudos
CREATE TABLE Anexos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    laudo_id INT,
    nome_arquivo VARCHAR(255),
    caminho_arquivo VARCHAR(255),
    tipo_mime VARCHAR(100),
    FOREIGN KEY (laudo_id) REFERENCES Laudos(id) ON DELETE CASCADE
);

-- Banco de dados odontolegal
CREATE TABLE banco_odonto_legal (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome_individuo VARCHAR(150),
    idade INTEGER,
    genero VARCHAR(20),
    observacoes TEXT,
    registros_dentarios TEXT,
    usuario_id INT,
    criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES Usuarios(id) ON DELETE SET NULL
);

-- Logs (histórico de ações no sistema)
CREATE TABLE Logs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    acao VARCHAR(255),
    tabela_afetada VARCHAR(50),
    registro_id INT,
    data_acao DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Usuarios(id)
);

-- Configurações do sistema
CREATE TABLE configuracoes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    chave VARCHAR(100) UNIQUE NOT NULL,
    valor TEXT NOT NULL,
    usuario_id INT,
    atualizado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES Usuarios(id) ON DELETE SET NULL
);
